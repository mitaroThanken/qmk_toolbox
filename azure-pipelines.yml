trigger:
- master

jobs:
- job: for_Windows
  pool:
    vmImage: 'windows-latest'
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: CopyFiles@2
    inputs:
      #sourceFolder: # Optional
      contents: '**\bin\Release\qmk_toolbox.exe'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      #cleanTargetFolder: false # Optional
      overWrite: true # Optional
      flattenFolders: true # Optional

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: qmk_toolbox_windows

- job: for_macOS
  pool:
    vmImage: 'macOS-10.14'
  variables:
    sdk: 'macosx10.14'
    configuration: 'Release'

  steps:
  - task: Xcode@5
    inputs:
      actions: 'clean build'
      sdk: '$(sdk)'
      configuration: '$(configuration)'
      xcWorkspacePath: 'osx/QMK Toolbox.xcodeproj'
      xcodeVersion: 'default' # Options: default, 10, 9, 8, specifyPath
      packageApp: false

  - task: CopyFiles@2
    inputs:
      #sourceFolder: # Optional
      contents: 'osx/build/Release/**'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      #cleanTargetFolder: false # Optional
      overWrite: true # Optional
      flattenFolders: true # Optional

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: qmk_toolbox_macos

- job: release
  dependsOn: ['for_Windows', 'for_macOS']

  steps:
  # GitHub Release
  # Create, edit, or delete a GitHub release.
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'forRelease'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create' # Options: create, edit, delete
      target: '$(Build.SourceVersion)' # Required when action == Create || Action == Edit
      tagSource: 'manual' # Required when action == Create# Options: auto, manual
      tag: $(Build.BuildNumber) # Required when action == Edit || Action == Delete || TagSource == Manual
      #title: # Optional
      #releaseNotesSource: 'file' # Optional. Options: file, input
      #releaseNotesFile: # Optional
      #releaseNotes: # Optional
      assets: '$(Build.ArtifactStagingDirectory)/*' # Optional
      #assetUploadMode: 'delete' # Optional. Options: delete, replace
      #isDraft: false # Optional
      isPreRelease: true # Optional
      #addChangeLog: true # Optional
